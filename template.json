{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_sql_name": {
            "defaultValue": "sql",
            "type": "String"
        },
        "servers_dbdocsserver_name": {
            "defaultValue": "dbdocsserver",
            "type": "String"
        },
        "workflows_MeantForDocs_name": {
            "defaultValue": "MeantForDocs",
            "type": "String"
        },
        "databases_DBDocs_name": {
            "defaultValue": "DBDocs",
            "type": "String"
        },
        "advisors_DropIndex_name": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "keys_ServiceManaged_name": {
            "defaultValue": "ServiceManaged",
            "type": "String"
        },
        "advisors_CreateIndex_name": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "advisors_DefragmentIndex_name": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_DbParameterization_name": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "encryptionProtector_current_name": {
            "defaultValue": "current",
            "type": "String"
        },
        "securityAlertPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "vulnerabilityAssessments_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_DropIndex_name_1": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "firewallRules_AllowAllWindowsAzureIps_name": {
            "defaultValue": "AllowAllWindowsAzureIps",
            "type": "String"
        },
        "advisors_CreateIndex_name_1": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_1": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "auditingPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "databases_master_name": {
            "defaultValue": "master",
            "type": "String"
        },
        "geoBackupPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_1": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_DbParameterization_name_1": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "securityAlertPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "securityAlertPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "vulnerabilityAssessments_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "vulnerabilityAssessments_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name": {
            "defaultValue": "current",
            "type": "String"
        },
        "transparentDataEncryption_current_name_1": {
            "defaultValue": "current",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_MeantForDocs_name')]",
            "apiVersion": "2017-07-01",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "HTTP": {
                            "recurrence": {
                                "frequency": "Month",
                                "interval": 3
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "https://api.exchangeratesapi.io/latest"
                            }
                        }
                    },
                    "actions": {
                        "Insert_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "rates": "@{triggerBody()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SampleData2]'))}/items"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/ed57d4f5-24b9-488c-a7fe-c1f67a646900/providers/Microsoft.Web/locations/westeurope/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('servers_dbdocsserver_name')]",
            "apiVersion": "2015-05-01-preview",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "administratorLogin": "mmarrone",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sql_name')]",
            "apiVersion": "2016-06-01",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "displayName": "InsertValueExample",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/ed57d4f5-24b9-488c-a7fe-c1f67a646900/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_sql_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('advisors_CreateIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('advisors_DropIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('advisors_DbParameterization_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('advisors_DefragmentIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('advisors_ForceLastGoodPlan_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('auditingPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "fullAuditLogsTableName": "SQLDBAuditLogsDbdocsserver",
                "auditLogsTableName": "Dbdocsserver",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "westeurope",
            "tags": {},
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('firewallRules_AllowAllWindowsAzureIps_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('encryptionProtector_current_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('keys_ServiceManaged_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyType": "[parameters('keys_ServiceManaged_name')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('securityAlertPolicies_Default_name'))]",
            "apiVersion": "2017-03-01-preview",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "retentionDays": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('vulnerabilityAssessments_Default_name'))]",
            "apiVersion": "2018-06-01-preview",
            "scale": null,
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('advisors_CreateIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('advisors_DropIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('advisors_DbParameterization_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('advisors_DefragmentIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('advisors_ForceLastGoodPlan_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('auditingPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsDbdocsserverDbdocs",
                "auditLogsTableName": "DbdocsserverDbdocs",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('geoBackupPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('securityAlertPolicies_Default_name_1'))]",
            "apiVersion": "2018-06-01-preview",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "retentionDays": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('transparentDataEncryption_current_name'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_DBDocs_name'), '/', parameters('vulnerabilityAssessments_Default_name_1'))]",
            "apiVersion": "2017-03-01-preview",
            "scale": null,
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dbdocsserver_name'), parameters('databases_DBDocs_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_master_name'), '/', parameters('auditingPolicies_Default_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsDbdocsserverMaster",
                "auditLogsTableName": "DbdocsserverMaster",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_master_name'), '/', parameters('geoBackupPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_master_name'), '/', parameters('securityAlertPolicies_Default_name_2'))]",
            "apiVersion": "2018-06-01-preview",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "retentionDays": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_master_name'), '/', parameters('transparentDataEncryption_current_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "West Europe",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "name": "[concat(parameters('servers_dbdocsserver_name'), '/', parameters('databases_master_name'), '/', parameters('vulnerabilityAssessments_Default_name_2'))]",
            "apiVersion": "2017-03-01-preview",
            "scale": null,
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dbdocsserver_name'))]"
            ]
        }
    ]
}